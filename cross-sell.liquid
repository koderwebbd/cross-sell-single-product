 <cross-sell-form>
              <form method="post" action="/cart/add" id="cross_sale">

                
                {%- liquid
                  assign product_id = '8007249494325' | times: 1
                  assign cross_sale_product = collections.all.products | where: 'id', product_id
                  assign cross_sale_product = cross_sale_product[0]
                -%}
                <div class="cross_sale_wrap">
                <input
                        type="hidden"
                        name="id"
                        value="{{ cross_sale_product.selected_or_first_available_variant.id }}"
                        disabled
                        class="product-variant-id"
                      >

                  <div class="heading">{{ cross_sale_product.title }}</div>
                  {% comment %}<select name="id" id="">
                    <option value="{{ cross_sale_product.selected_or_first_available_variant.id }}" selected="selected"></option>
                  </select>{% endcomment %}
                  {% comment %}<button id="up_sale_btn" class="up_sale_btn" name="add">Add to cart</button>{% endcomment %}

                  <button
                    d="up_sale_btn" 
                    class="up_sale_btn button button--full-width button--secondary"
                    type="submit"
                    name="add"
                    
                    {% if product.selected_or_first_available_variant.available == false or quantity_rule_soldout %}
                      disabled
                    {% endif %}
                  >
                <span>
                  {%- if product.selected_or_first_available_variant.available == false or quantity_rule_soldout -%}
                    {{ 'products.product.sold_out' | t }}
                  {%- else -%}
                    {{ 'products.product.add_to_cart' | t }}
                  {%- endif -%}
                </span>
                <div class="loading-overlay__spinner hidden">
                  <svg
                    aria-hidden="true"
                    focusable="false"
                    class="spinner"
                    viewBox="0 0 66 66"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                  </svg>
                </div>
              </button>


                </div>

              </form>
              </cross-sell-form>
              {% comment %}<button class="up_sale_btn" form="cross_sale" >Add to cart</button>{% endcomment %}
              <script>
                jQuery(document).ready(function($) {
                  $('#cross_sale1').submit(function(e) {
                    e.preventDefault();

                    var variantID = $(this).find('.product-variant-id'),
                        submitButton = $(this).find('.up_sale_btn');
                    variantID.removeAttr('disabled'),
                    cart = $('cart-notification,cart-drawer');
                    submitButton.attr('aria-disabled', 'true');
                    submitButton.addClass('loading');
                    submitButton.find('.loading-overlay__spinner').removeClass('hidden');
                    
                    
                    var data = $(this).serialize();
                    var link = $(this).attr('action');

                    //console.log(data);
                    console.log(cart)

                    jQuery.ajax({
                      url: link,
                      type: 'POST',
                      dataType: 'json',
                      data: data,
                      complete: function(xhr, textStatus) {
                        //called when complete
                        if ( xhr.status == 200 ) {

                          submitButton.removeAttr('aria-disabled');
                          submitButton.removeClass('loading');
                          submitButton.find('.loading-overlay__spinner').addClass('hidden'); 
                          console.log('200')
                        }
                        //console.log("ok", xhr)
                      },
                      success: function(data, textStatus, xhr) {
                        //called when successful

                        //console.log(data)
                      },
                      error: function(xhr, textStatus, errorThrown) {
                        //called when there is an error
                        //console.log(xhr, textStatus, errorThrown)
                      }
                    });
                    
                  });
                });

                if (!customElements.get('cross-sell-form')) {
                customElements.define('cross-sell-form', class CrossSaleForm extends HTMLElement {
                  constructor() {
                    super();

                    this.form = this.querySelector('form');
                    this.form.querySelector('[name=id]').disabled = false;
                    this.form.addEventListener('submit', this.onSubmitHandler.bind(this));
                    this.cart = document.querySelector('cart-notification') || document.querySelector('cart-drawer');
                    this.submitButton = this.querySelector('[type="submit"]');
                    if (document.querySelector('cart-drawer')) this.submitButton.setAttribute('aria-haspopup', 'dialog');
                  }

                  onSubmitHandler(evt) {
                    evt.preventDefault();
                    if (this.submitButton.getAttribute('aria-disabled') === 'true') return;

                    this.handleErrorMessage();

                    this.submitButton.setAttribute('aria-disabled', true);
                    this.submitButton.classList.add('loading');
                    this.querySelector('.loading-overlay__spinner').classList.remove('hidden');

                    const config = fetchConfig('javascript');
                    config.headers['X-Requested-With'] = 'XMLHttpRequest';
                    delete config.headers['Content-Type'];

                    const formData = new FormData(this.form);
                    if (this.cart) {
                      formData.append('sections', this.cart.getSectionsToRender().map((section) => section.id));
                      formData.append('sections_url', window.location.pathname);
                      this.cart.setActiveElement(document.activeElement);
                    }
                    config.body = formData;

                    fetch(`${routes.cart_add_url}`, config)
                      .then((response) => response.json())
                      .then((response) => {
                        if (response.status) {
                          this.handleErrorMessage(response.description);

                          const soldOutMessage = this.submitButton.querySelector('.sold-out-message');
                          if (!soldOutMessage) return;
                          this.submitButton.setAttribute('aria-disabled', true);
                          this.submitButton.querySelector('span').classList.add('hidden');
                          soldOutMessage.classList.remove('hidden');
                          this.error = true;
                          return;
                        } else if (!this.cart) {
                          window.location = window.routes.cart_url;
                          return;
                        }

                        if (!this.error) publish(PUB_SUB_EVENTS.cartUpdate, {source: 'product-form'});
                        this.error = false;
                        const quickAddModal = this.closest('quick-add-modal');
                        if (quickAddModal) {
                          document.body.addEventListener('modalClosed', () => {
                            setTimeout(() => { this.cart.renderContents(response) });
                          }, { once: true });
                          quickAddModal.hide(true);
                        } else {
                          this.cart.renderContents(response);
                        }
                      })
                      .catch((e) => {
                        console.error(e);
                      })
                      .finally(() => {
                        this.submitButton.classList.remove('loading');
                        if (this.cart && this.cart.classList.contains('is-empty')) this.cart.classList.remove('is-empty');
                        if (!this.error) this.submitButton.removeAttribute('aria-disabled');
                        this.querySelector('.loading-overlay__spinner').classList.add('hidden');
                      });
                  }

                  handleErrorMessage(errorMessage = false) {
                    this.errorMessageWrapper = this.errorMessageWrapper || this.querySelector('.product-form__error-message-wrapper');
                    if (!this.errorMessageWrapper) return;
                    this.errorMessage = this.errorMessage || this.errorMessageWrapper.querySelector('.product-form__error-message');

                    this.errorMessageWrapper.toggleAttribute('hidden', !errorMessage);

                    if (errorMessage) {
                      this.errorMessage.textContent = errorMessage;
                    }
                  }
                });
              }

              </script>
